import { TDocumentDefinitions } from 'pdfmake/interfaces';
import pdfMake from 'pdfmake/build/pdfmake';
import * as pdfFonts from 'pdfmake/build/vfs_fonts';

// // Initialize the virtual file system
// pdfMake.vfs = pdfFonts.vfs;

export const generateSimplePdf = (
  content: any,
  title: string,
  dateRange: string
): Promise<Buffer> => {

  const docDefinition: TDocumentDefinitions = {
      content: [
        { text: title, style: 'header' },
        { text: `Report Period: ${dateRange}\n`, style: 'subheader' },
        ...content,
        {
          text: '\n\nNotes:\n' +
                '• This report was automatically generated by the Lachs Golden ERP System\n' +
                '• Data is accurate as of the report generation date\n' +
                '• Confidential: This document contains proprietary business information',
          style: 'notes'
        }
      ],
      styles: {
        header: {
          fontSize: 22,
          bold: true,  // This will use Helvetica Bold (which exists)
          alignment: 'center',
          margin: [0, 0, 0, 10]
        },
        subheader: {
          fontSize: 16,
          alignment: 'center',
          color: '#555'
        },
        tableHeader: {
          bold: true,  // This will use Helvetica Bold
          fillColor: '#f0f0f0'
        },
        notes: {
          fontSize: 10,
          color: '#777',
          italics: true
        }
      }
    };

  const pdfDoc = pdfMake.createPdf(docDefinition,undefined,undefined,pdfFonts.vfs);

  return new Promise<Buffer>((resolve) => {
    pdfDoc.getBuffer((buffer: Buffer) => {
      resolve(buffer);
    });
  });
};
