// // lib/pdf/generateReport.ts
// import pdfMake from 'pdfmake/build/pdfmake';
// import pdfFonts from 'pdfmake/build/vfs_fonts';
// import { ReportType, ReportData, CompanyInfo } from './types';
// import { format } from 'date-fns';

// // Initialize PDF fonts
// pdfMake.vfs = pdfFonts.pdfMake.vfs;

// // Company branding configuration
// const COMPANY_INFO: CompanyInfo = {
//   name: 'Lachs Golden',
//   address: '123 Enterprise Boulevard, Business District',
//   city: 'New York',
//   state: 'NY',
//   zip: '10001',
//   country: 'USA',
//   phone: '+1 (212) 555-7890',
//   email: 'info@lachsgolden.com',
//   website: 'www.lachsgolden.com',
//   logoUrl: '/images/lachs-golden-logo.png' // Will be handled in browser environment
// };

// // Document definition for all reports
// const createDocumentDefinition = (
//   reportType: ReportType,
//   data: ReportData,
//   dateRange: string,
//   companyInfo: CompanyInfo = COMPANY_INFO
// ) => {
//   const currentDate = new Date();
  
//   return {
//     info: {
//       title: `${reportType.charAt(0) + reportType.slice(1).replace(/-/g, ' ')} Report`,
//       author: 'Lachs Golden ERP System',
//       subject: 'Business Report',
//       keywords: 'business, report, Lachs Golden',
//       creationDate: currentDate
//     },
//     pageSize: 'A4',
//     pageMargins: [40, 80, 40, 60],
//     header: {
//       columns: [
//         {
//           image: 'logo',
//           width: 120,
//           margin: [40, 20, 0, 0]
//         },
//         {
//           text: companyInfo.name,
//           style: 'headerTitle',
//           alignment: 'right',
//           margin: [0, 30, 40, 0]
//         }
//       ],
//       margin: [0, 10, 0, 0],
//       background: '#1E293B' // Dark background for header
//     },
//     footer: (currentPage: number, pageCount: number) => ({
//       columns: [
//         {
//           text: `Generated on ${format(currentDate, 'PPP p')}`,
//           style: 'footerText',
//           margin: [40, 0, 0, 10]
//         },
//         {
//           text: `Page ${currentPage} of ${pageCount}`,
//           style: 'footerText',
//           alignment: 'right',
//           margin: [0, 0, 40, 10]
//         }
//       ],
//       background: '#1E293B' // Dark background for footer
//     }),
//     content: [
//       {
//         text: getReportTitle(reportType),
//         style: 'reportTitle',
//         margin: [0, 0, 0, 20]
//       },
//       {
//         text: `Report Period: ${dateRange}`,
//         style: 'dateRange',
//         margin: [0, 0, 0, 20]
//       },
//       {
//         text: 'Report Details',
//         style: 'sectionHeader',
//         margin: [0, 0, 0, 10]
//       },
//       getReportContent(reportType, data),
//       {
//         text: 'Notes:',
//         style: 'notesHeader',
//         margin: [0, 25, 0, 5]
//       },
//       {
//         ul: [
//           'This report was automatically generated by the Lachs Golden ERP System',
//           'Data is accurate as of the report generation date',
//           'Confidential: This document contains proprietary business information'
//         ],
//         style: 'notesList'
//       }
//     ],
//     styles: {
//       headerTitle: {
//         color: '#FACC15',
//         fontSize: 18,
//         bold: true
//       },
//       reportTitle: {
//         fontSize: 22,
//         bold: true,
//         color: '#FACC15',
//         alignment: 'center'
//       },
//       dateRange: {
//         fontSize: 14,
//         color: '#CBD5E1',
//         alignment: 'center'
//       },
//       sectionHeader: {
//         fontSize: 16,
//         bold: true,
//         color: '#FACC15',
//         decoration: 'underline'
//       },
//       tableHeader: {
//         bold: true,
//         fillColor: '#334155',
//         color: '#FACC15'
//       },
//       footerText: {
//         color: '#CBD5E1',
//         fontSize: 10
//       },
//       notesHeader: {
//         bold: true,
//         color: '#FACC15'
//       },
//       notesList: {
//         color: '#CBD5E1',
//         fontSize: 10
//       },
//       summaryItem: {
//         fontSize: 12,
//         margin: [0, 5, 0, 5]
//       },
//       summaryValue: {
//         bold: true,
//         color: '#FACC15'
//       }
//     },
//     defaultStyle: {
//       font: 'Roboto',
//       fontSize: 10,
//       color: '#E2E8F0'
//     }
//   };
// };

// // Helper to get report title based on type
// const getReportTitle = (reportType: ReportType): string => {
//   switch (reportType) {
//     case 'user-activity':
//       return 'User Activity Report';
//     case 'financial-summary':
//       return 'Financial Summary Report';
//     case 'inventory-status':
//       return 'Inventory Status Report';
//     case 'hr-compliance':
//       return 'HR Compliance Report';
//     case 'security-audit':
//       return 'Security Audit Report';
//     case 'system-health':
//       return 'System Health Report';
//     case 'transaction-summary':
//       return 'Transaction Summary Report';
//     case 'expense-report':
//       return 'Expense Report';
//     case 'income-report':
//       return 'Income Report';
//     default:
//       return reportType.split('-').map(word => 
//         word.charAt(0).toUpperCase() + word.slice(1)
//       ).join(' ') + ' Report';
//   }
// };

// // Helper to get report content based on type
// const getReportContent = (reportType: ReportType, data: ReportData) => {
//   switch (reportType) {
//     case 'user-activity':
//       return getUserActivityContent(data);
//     case 'financial-summary':
//       return getFinancialSummaryContent(data);
//     case 'transaction-summary':
//     case 'expense-report':
//     case 'income-report':
//       return getTransactionContent(reportType, data);
//     case 'inventory-status':
//       return getInventoryStatusContent(data);
//     case 'hr-compliance':
//       return getHRComplianceContent(data);
//     case 'security-audit':
//       return getSecurityAuditContent(data);
//     case 'system-health':
//       return getSystemHealthContent(data);
//     default:
//       return getDefaultContent(data);
//   }
// };

// // Content generators for each report type
// const getUserActivityContent = (data: ReportData) => {
//   // Implementation for user activity report
//   return {
//     layout: 'lightHorizontalLines',
//     table: {
//       headerRows: 1,
//       widths: ['*', 'auto', 'auto', 'auto'],
//       body: [
//         [
//           { text: 'User', style: 'tableHeader' },
//           { text: 'Role', style: 'tableHeader' },
//           { text: 'Status', style: 'tableHeader' },
//           { text: 'Last Activity', style: 'tableHeader' }
//         ],
//         ...(data.rows?.map(row => [
//           row.user,
//           row.role,
//           { text: row.status, color: getStatusColor(row.status) },
//           format(new Date(row.lastActivity), 'MMM d, yyyy')
//         ]) || [])
//       ]
//     }
//   };
// };

// const getFinancialSummaryContent = (data: ReportData) => {
//   // Implementation for financial summary report
//   return [
//     {
//       columns: [
//         {
//           width: '50%',
//           stack: [
//             {
//               text: 'Revenue Summary',
//               style: 'sectionHeader',
//               margin: [0, 0, 0, 10]
//             },
//             {
//               layout: 'noBorders',
//               table: {
//                 widths: ['auto', '*'],
//                 body: [
//                   ['Total Revenue:', { text: data.revenue?.total || '$0.00', style: 'summaryValue' }],
//                   ['Recurring Revenue:', { text: data.revenue?.recurring || '$0.00', style: 'summaryValue' }],
//                   ['New Revenue:', { text: data.revenue?.new || '$0.00', style: 'summaryValue' }],
//                   ['Revenue Growth:', { text: data.revenue?.growth || '0%', style: 'summaryValue' }]
//                 ]
//               }
//             }
//           ]
//         },
//         {
//           width: '50%',
//           stack: [
//             {
//               text: 'Expense Summary',
//               style: 'sectionHeader',
//               margin: [0, 0, 0, 10]
//             },
//             {
//               layout: 'noBorders',
//               table: {
//                 widths: ['auto', '*'],
//                 body: [
//                   ['Total Expenses:', { text: data.expenses?.total || '$0.00', style: 'summaryValue' }],
//                   ['Operating Expenses:', { text: data.expenses?.operating || '$0.00', style: 'summaryValue' }],
//                   ['COGS:', { text: data.expenses?.cogs || '$0.00', style: 'summaryValue' }]
//                 ]
//               }
//             }
//           ]
//         }
//       ]
//     },
//     {
//       text: 'Revenue by Category',
//       style: 'sectionHeader',
//       margin: [0, 20, 0, 10]
//     },
//     {
//       layout: 'lightHorizontalLines',
//       table: {
//         headerRows: 1,
//         widths: ['*', 'auto', 'auto'],
//         body: [
//           [
//             { text: 'Category', style: 'tableHeader' },
//             { text: 'Amount', style: 'tableHeader' },
//             { text: 'Percentage', style: 'tableHeader' }
//           ],
//           ...(data.revenueByCategory?.map(category => [
//             category.name,
//             category.amount,
//             category.percentage
//           ]) || [])
//         ]
//       }
//     }
//   ];
// };

// const getTransactionContent = (reportType: ReportType, data: ReportData) => {
//   // Implementation for transaction reports
//   const isExpense = reportType === 'expense-report';
//   const isIncome = reportType === 'income-report';
  
//   return [
//     {
//       columns: [
//         {
//           width: '50%',
//           stack: [
//             {
//               text: isExpense ? 'Expense Summary' : isIncome ? 'Income Summary' : 'Transaction Summary',
//               style: 'sectionHeader',
//               margin: [0, 0, 0, 10]
//             },
//             {
//               layout: 'noBorders',
//               table: {
//                 widths: ['auto', '*'],
//                 body: [
//                   [isExpense ? 'Total Expenses:' : 'Total Income:', 
//                    { text: data.summary?.total || '$0.00', style: 'summaryValue' }],
//                   [isExpense ? 'Average Expense:' : 'Average Income:', 
//                    { text: data.summary?.average || '$0.00', style: 'summaryValue' }],
//                   ['Number of Transactions:', 
//                    { text: data.summary?.count || '0', style: 'summaryValue' }]
//                 ]
//               }
//             }
//           ]
//         },
//         {
//           width: '50%',
//           stack: [
//             {
//               text: 'Period Summary',
//               style: 'sectionHeader',
//               margin: [0, 0, 0, 10]
//             },
//             {
//               layout: 'noBorders',
//               table: {
//                 widths: ['auto', '*'],
//                 body: [
//                   ['Start Date:', { text: data.period?.start || 'N/A', style: 'summaryValue' }],
//                   ['End Date:', { text: data.period?.end || 'N/A', style: 'summaryValue' }],
//                   ['Report Generated:', { text: new Date().toLocaleDateString(), style: 'summaryValue' }]
//                 ]
//               }
//             }
//           ]
//         }
//       ]
//     },
//     {
//       text: isExpense ? 'Expense Breakdown' : isIncome ? 'Income Sources' : 'Transaction Details',
//       style: 'sectionHeader',
//       margin: [0, 20, 0, 10]
//     },
//     {
//       layout: 'lightHorizontalLines',
//       table: {
//         headerRows: 1,
//         widths: isExpense || isIncome ? ['*', 'auto', 'auto', 'auto'] : ['*', 'auto', 'auto'],
//         body: [
//           isExpense || isIncome ? [
//             { text: 'Category', style: 'tableHeader' },
//             { text: 'Amount', style: 'tableHeader' },
//             { text: 'Date', style: 'tableHeader' },
//             { text: 'Status', style: 'tableHeader' }
//           ] : [
//             { text: 'Description', style: 'tableHeader' },
//             { text: 'Amount', style: 'tableHeader' },
//             { text: 'Date', style: 'tableHeader' }
//           ],
//           ...(data.transactions?.map(transaction => 
//             isExpense || isIncome ? [
//               transaction.category,
//               transaction.amount,
//               format(new Date(transaction.date), 'MMM d, yyyy'),
//               { text: transaction.status, color: getStatusColor(transaction.status) }
//             ] : [
//               transaction.description,
//               transaction.amount,
//               format(new Date(transaction.date), 'MMM d, yyyy')
//             ]
//           ) || [])
//         ]
//       }
//     },
//     ...(data.summaryByCategory ? [
//       {
//         text: 'Summary by Category',
//         style: 'sectionHeader',
//         margin: [0, 20, 0, 10]
//       },
//       {
//         layout: 'lightHorizontalLines',
//         table: {
//           headerRows: 1,
//           widths: ['*', 'auto', 'auto'],
//           body: [
//             [
//               { text: 'Category', style: 'tableHeader' },
//               { text: 'Amount', style: 'tableHeader' },
//               { text: 'Percentage', style: 'tableHeader' }
//             ],
//             ...(data.summaryByCategory?.map(category => [
//               category.name,
//               category.amount,
//               category.percentage
//             ]) || [])
//           ]
//         }
//       }
//     ] : [])
//   ];
// };

// // Additional content generators would go here...
// // getInventoryStatusContent, getHRComplianceContent, etc.

// // Helper to get status color
// const getStatusColor = (status: string): string => {
//   switch (status.toLowerCase()) {
//     case 'active':
//     case 'completed':
//     case 'won':
//       return '#10B981'; // Green
//     case 'pending':
//     case 'in progress':
//       return '#F59E0B'; // Amber
//     case 'blocked':
//     case 'rejected':
//     case 'lost':
//       return '#EF4444'; // Red
//     default:
//       return '#CBD5E1'; // Gray
//   }
// };

// // Main function to generate PDF buffer
// export const generatePDF = async (
//   reportType: ReportType, 
//   data: ReportData, 
//   dateRange: string,
//   companyInfo: CompanyInfo = COMPANY_INFO
// ): Promise<Buffer> => {
//   return new Promise((resolve, reject) => {
//     try {
//       const docDefinition = createDocumentDefinition(reportType, data, dateRange, companyInfo);
//       const pdfDoc = pdfMake.createPdf(docDefinition);
      
//       pdfDoc.getBuffer((buffer) => {
//         resolve(buffer);
//       });
//     } catch (error) {
//       reject(error);
//     }
//   });
// };

// // Types for the report data
// export type ReportType = 
//   | 'user-activity'
//   | 'financial-summary'
//   | 'transaction-summary'
//   | 'expense-report'
//   | 'income-report'
//   | 'inventory-status'
//   | 'hr-compliance'
//   | 'security-audit'
//   | 'system-health';

// export interface ReportData {
//   summary?: {
//     total: string;
//     average: string;
//     count: number;
//   };
//   period?: {
//     start: string;
//     end: string;
//   };
//   rows?: Array<{
//     user: string;
//     role: string;
//     status: string;
//     lastActivity: string;
//   }>;
//   revenue?: {
//     total: string;
//     recurring: string;
//     new: string;
//     growth: string;
//   };
//   expenses?: {
//     total: string;
//     operating: string;
//     cogs: string;
//   };
//   revenueByCategory?: Array<{
//     name: string;
//     amount: string;
//     percentage: string;
//   }>;
//   summaryByCategory?: Array<{
//     name: string;
//     amount: string;
//     percentage: string;
//   }>;
//   transactions?: Array<{
//     description: string;
//     category: string;
//     amount: string;
//     date: string;
//     status: string;
//   }>;
// }

// export interface CompanyInfo {
//   name: string;
//   address: string;
//   city: string;
//   state: string;
//   zip: string;
//   country: string;
//   phone: string;
//   email: string;
//   website: string;
//   logoUrl?: string;
// }